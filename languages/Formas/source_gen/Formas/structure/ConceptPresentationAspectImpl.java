package Formas.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private ConceptPresentation props_Circulo;
  private ConceptPresentation props_Forma;
  private ConceptPresentation props_Quadrado;
  private ConceptPresentation props_Retangulo;
  private ConceptPresentation props_Tela;

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.Circulo:
        if (props_Circulo == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("circulo");
          props_Circulo = cpb.create();
        }
        return props_Circulo;
      case LanguageConceptSwitch.Forma:
        if (props_Forma == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          props_Forma = cpb.create();
        }
        return props_Forma;
      case LanguageConceptSwitch.Quadrado:
        if (props_Quadrado == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("quadrado");
          props_Quadrado = cpb.create();
        }
        return props_Quadrado;
      case LanguageConceptSwitch.Retangulo:
        if (props_Retangulo == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("retangulo");
          props_Retangulo = cpb.create();
        }
        return props_Retangulo;
      case LanguageConceptSwitch.Tela:
        if (props_Tela == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_Tela = cpb.create();
        }
        return props_Tela;
    }
    return null;
  }
}
