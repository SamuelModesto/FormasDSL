package Formas.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.DataTypeDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptCirculo = createDescriptorForCirculo();
  /*package*/ final ConceptDescriptor myConceptForma = createDescriptorForForma();
  /*package*/ final ConceptDescriptor myConceptQuadrado = createDescriptorForQuadrado();
  /*package*/ final ConceptDescriptor myConceptRetangulo = createDescriptorForRetangulo();
  /*package*/ final ConceptDescriptor myConceptTela = createDescriptorForTela();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }


  @Override
  public void reportDependencies(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.Dependencies deps) {
    deps.extendedLanguage(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, "jetbrains.mps.lang.core");
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptCirculo, myConceptForma, myConceptQuadrado, myConceptRetangulo, myConceptTela);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.Circulo:
        return myConceptCirculo;
      case LanguageConceptSwitch.Forma:
        return myConceptForma;
      case LanguageConceptSwitch.Quadrado:
        return myConceptQuadrado;
      case LanguageConceptSwitch.Retangulo:
        return myConceptRetangulo;
      case LanguageConceptSwitch.Tela:
        return myConceptTela;
      default:
        return null;
    }
  }

  @Override
  public Collection<DataTypeDescriptor> getDataTypeDescriptors() {
    return Arrays.asList();
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForCirculo() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Formas", "Circulo", 0xcfcce30891bf49ebL, 0x913633dbfb422915L, 0x4679867c3218a831L);
    b.class_(false, false, false);
    b.super_("Formas.structure.Forma", 0xcfcce30891bf49ebL, 0x913633dbfb422915L, 0x4679867c3218a830L);
    b.origin("r:3f8def95-6d36-4c76-986d-509ccf426aa1(Formas.structure)/5078237922811488305");
    b.version(2);
    b.property("circuloCoordX", 0x4679867c3218a832L).type(PrimitiveTypeId.INTEGER).origin("5078237922811488306").done();
    b.property("CirculoCoordY", 0x4679867c3218a834L).type(PrimitiveTypeId.INTEGER).origin("5078237922811488308").done();
    b.property("raio", 0x4679867c3218a837L).type(PrimitiveTypeId.INTEGER).origin("5078237922811488311").done();
    b.alias("circulo");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForForma() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Formas", "Forma", 0xcfcce30891bf49ebL, 0x913633dbfb422915L, 0x4679867c3218a830L);
    b.class_(false, true, false);
    b.origin("r:3f8def95-6d36-4c76-986d-509ccf426aa1(Formas.structure)/5078237922811488304");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForQuadrado() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Formas", "Quadrado", 0xcfcce30891bf49ebL, 0x913633dbfb422915L, 0x4679867c3218a83bL);
    b.class_(false, false, false);
    b.super_("Formas.structure.Forma", 0xcfcce30891bf49ebL, 0x913633dbfb422915L, 0x4679867c3218a830L);
    b.origin("r:3f8def95-6d36-4c76-986d-509ccf426aa1(Formas.structure)/5078237922811488315");
    b.version(2);
    b.property("quadradoCoordX", 0x4679867c3218a83cL).type(PrimitiveTypeId.INTEGER).origin("5078237922811488316").done();
    b.property("quadradoCoordY", 0x4679867c3218a83eL).type(PrimitiveTypeId.INTEGER).origin("5078237922811488318").done();
    b.property("lado", 0x4679867c3218a841L).type(PrimitiveTypeId.INTEGER).origin("5078237922811488321").done();
    b.alias("quadrado");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForRetangulo() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Formas", "Retangulo", 0xcfcce30891bf49ebL, 0x913633dbfb422915L, 0x5b8dfe967e7725b6L);
    b.class_(false, false, false);
    b.super_("Formas.structure.Forma", 0xcfcce30891bf49ebL, 0x913633dbfb422915L, 0x4679867c3218a830L);
    b.origin("r:3f8def95-6d36-4c76-986d-509ccf426aa1(Formas.structure)/6597208951487931830");
    b.version(2);
    b.property("retanguloCoordX", 0x5b8dfe967e7725b7L).type(PrimitiveTypeId.INTEGER).origin("6597208951487931831").done();
    b.property("retanguloCoordY", 0x5b8dfe967e7725b9L).type(PrimitiveTypeId.INTEGER).origin("6597208951487931833").done();
    b.property("lado", 0x5b8dfe967e7725bcL).type(PrimitiveTypeId.INTEGER).origin("6597208951487931836").done();
    b.property("altura", 0x5b8dfe967e7725c0L).type(PrimitiveTypeId.INTEGER).origin("6597208951487931840").done();
    b.alias("retangulo");
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTela() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("Formas", "Tela", 0xcfcce30891bf49ebL, 0x913633dbfb422915L, 0x4679867c3218a845L);
    b.class_(false, false, true);
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.parent(0x4caf0310491e41f5L, 0x8a9b2006b3a94898L, 0x40c1a7cb987d20d5L);
    b.origin("r:3f8def95-6d36-4c76-986d-509ccf426aa1(Formas.structure)/5078237922811488325");
    b.version(2);
    b.aggregate("formas", 0x4679867c3218a84cL).target(0xcfcce30891bf49ebL, 0x913633dbfb422915L, 0x4679867c3218a830L).optional(true).ordered(true).multiple(true).origin("5078237922811488332").done();
    return b.create();
  }
}
